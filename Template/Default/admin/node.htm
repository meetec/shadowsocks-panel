<import template="/admin/_header" />
<import template="/admin/_content" />

<div class="page-title">
    <div class="title-env">
        <h1 class="title">Node Manager</h1>
        <p class="description">Node classification!</p>
    </div>
    <div class="breadcrumb-env">
        <ol class="breadcrumb bc-1"><li><a href="/admin"><i class="fa-home"></i>Management side</a></li><li><a href="/admin/node">Node Manager</a></li></ol>
    </div>
</div>
<section class="content">
            <div class="row">
                <div class="col-xs-12">
                    <div class="box">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h3 class="panel-title"></h3>

                                <div class="panel-options">
                                    <a href="javascript:;" id="node-add"><span>+</span></a>
                                    <a href="javascript:;" data-toggle="reload">
                                        <i class="fa-rotate-right"></i>
                                    </a>
                                </div>
                            </div>
                            <div class="panel-body">
                                <div class="table-responsive">

                                    <table cellspacing="0" class="table table-small-font table-bordered table-striped">
                                        <thead>
                                            <tr>
                                                <th>Id</th>
                                                <th>Node</th>
                                                <th width="120px">Encription</th>
                                                <th width="310px">Description</th>
                                                <th width="85px">Type</th>
                                                <th width="95px">Custom encryption</th>
                                                <th width="150px">Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        <if condition="count($nodes) > 0">
                                            <loop variable="$nodes" key="$key" value="$node">
                                                <tr id="node-{$node->id}">
                                                    <td>#{$node->id}</td>
                                                    <td> {$node->name}</td>
                                                    <td> {$node->method}</td>
                                                    <td>{$node->info}</td>
                                                    <td><if condition="$node->type == 0">Ordinary nodes<else>Pro node</if></td>
                                                    <td><if condition="$node->custom_method == 0">not support<else>stand by</if></td>
                                                    <td>
                                                        <a class="btn btn-info btn-sm" href="javascript:;" onclick="nodeModify({$node->id});">edit</a>
                                                        <a class="btn btn-danger btn-sm" href="javascript:;" onclick="nodeRemove({$node->id});">delete</a>
                                                    </td>
                                                </tr>
                                            </loop>
                                            <else>
                                                <tr id="node-0">
                                                    <td>#</td>
                                                    <td colspan="5">No nodes</td>
                                                </tr>
                                        </if>
                                        </tbody>
                                    </table>

                                </div>

                            </div>
                        </div><!-- /.box-body -->
                    </div><!-- /.box -->
                </div>
            </div>
        </section>
</div>
</div>
<!-- Modal 6 (Long Modal)-->
<div class="modal fade" id="modal-6">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title"></h4>
            </div>

            <form role="form" id="form1" method="post" action="/admin/node/update.json" class="validate">
            <input type="hidden" name="form_add" value="{(time())}"/>
            <input type="hidden" name="node.id" id="node_id" value=""/>
            <div class="modal-body">
                <div id="modal-isload">Content is loading...</div>
                <div id="modal-isbody" style="display: none;">

                    <div class="row">
                        <div class="col-md-6">

                            <div class="form-group">
                                <label for="field-1" class="control-label">Node Name</label>

                                <input type="text" class="form-control" name="node.name" id="field-1" value="" data-validate="required" data-message-required="The node name must be filled.">
                            </div>

                        </div>

                        <div class="col-md-6">

                            <div class="form-group">
                                <label for="field-2" class="control-label">Node address</label>

                                <input type="text" class="form-control" name="node.server" id="field-2" placeholder="127.0.0.1" data-validate="required" data-message-required="Server address must be filled.">
                            </div>

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">

                            <div class="form-group">
                                <label for="field-3" class="control-label">Encryption</label>

                                <input type="text" class="form-control" name="node.method" id="field-3" placeholder="aes-128-cfb" data-validate="required" data-message-required="Encryption required.">
                            </div>

                        </div>

                        <div class="col-md-6">

                            <div class="form-group">
                                <label for="field-4" class="control-label">Node classification (0 Common / 1 VIP)</label>

                                <select name="node.type" id="field-4" class="form-control">
                                    <option value="0">Ordinary nodes</option>
                                    <option value="1">Pro nodes</option>
                                </select>
                            </div>

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="field-5" class="control-label">Node status</label>
                                <input type="text" class="form-control" name="node.status" id="field-5" placeholder="Available / Unavailable" data-validate="required" data-message-required="Node status must be filled.">
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="field-6" class="control-label">Sequence</label>
                                <input type="number" class="form-control" name="node.order" id="field-6" value="0" placeholder="0" data-validate="required" data-message-required="You must be filled.">
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="custom_method" class="control-label">Custom encryption</label>
                                <select name="node.custom_method" id="custom_method" class="form-control">
                                    <option value="0">not support</option>
                                    <option value="1">supported</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="field-7" class="control-label">Description</label>
                                <textarea class="form-control autogrow" name="node.info" id="field-7" placeholder="Write something about server info" ></textarea>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                * [Custom encryption] need server support custom encryption
                                <br/>
                                Currently supported server version: <a href="https://github.com/Acris/shadowsocks-rm/tree/manyuser" target="_blank">shadowsocks-rm manyuser</a>
                            </div>
                        </div>
                    </div>

                </div>



            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-white" data-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-success">Save now</button>
            </div>
            </form>
        </div>

    </div>
</div>
<script type="text/javascript">
    var modal_default_body = jQuery('#modal-6 .modal-body').html();
    jQuery(document).ready(function($) {

        $("form#form1").validate({
            rules: {
                'node.name': "required",
                'node.server': "required",
                'node.method': "required",
                'node.status': "required"
            },
            messages: {
                'node.name': "Node Name Required",
                'node.server': "Node link address must be filled",
                'node.method': "Node encryption Required",
                'node.status': "Node status must be filled"
            },
            errorElement: 'span',
            errorClass: 'validate-has-error',
            highlight: function (element) {
                $(element).closest('.form-group').addClass('validate-has-error');
            },
            unhighlight: function (element) {
                $(element).closest('.form-group').removeClass('validate-has-error');
            },
            errorPlacement: function (error, element)
            {
                if(element.closest('.has-switch').length)
                {
                    error.insertAfter(element.closest('.has-switch'));
                }
                else {
                    if(element.parent('.checkbox, .radio').length || element.parent('.input-group').length)
                    {
                        error.insertAfter(element.parent());
                    }
                    else
                    {
                        error.insertAfter(element);
                    }
                }
            },
            submitHandler: function(form) {
                $.ajax({
                    url: form.action,
                    method: "POST",
                    dataType: "json",
                    data: $(form).serialize(),
                    success: function(result){
                        if(result.code != 200) {
                            showToastr(result.message, 0, 3000, 'system error');
                            return;
                        }
                        if(result.data.error == 0) {
                            changeTable(result.data.node);
                        }
                        showToastr(result.data.message, 0);
                        $('#modal-6').modal('hide');
                    },
                    error: function(Xhr){
                        showToastr("An unknown error occurred, please try again", 0);
                    }
                });
            }
        });

        $("#node-add").on('click', function(){
            reset(true);
            $("input[name='node.id']").val('');
            $("input[name='node.name']").val('');
            $("select[name='node.type']").val('0');
            $("input[name='node.server']").val('');
            $("input[name='node.method']").val('');
            $("textarea[name='node.info']").val('');
            $("input[name='node.status']").val('');
            $("input[name='node.order']").val('0');
            $("input[name='node.custom_method']").val('0');
            $('#modal-6 .modal-title').html('Added node');
            $('#modal-6').modal('show', {backdrop: 'static'});
        });
    });
    function nodeRemove(nodeId){
        $.ajax({
            url: "/admin/node/delete.json",
            method: "POST",
            dataType: "json",
            data: {node_id: nodeId},
            success: function(result){
                if(result.code != 200){
                    showToastr(result.message, 0, 3000, 'system error');
                    return;
                }
                if(result.data.error == 0) {
                    $("#node-" + nodeId).remove();
                }
                showToastr(result.data.message, 0);
            },
            error: function(Xhr){
                showToastr("An unknown error occurred, please try again", 0);
            }
        });
    }
    function nodeModify(nodeId){
        $("#modal-6 .modal-body").html(modal_default_body);
        reset(false);
        $.ajax({
            url: "/admin/node/query.json",
            method: "GET",
            dataType: "json",
            data: {node_id: nodeId},
            success: function(result){
                if(result.code != 200){
                    showToastr(result.message, 0, 3000, 'system error');
                    return;
                }
                if(result.data.error == 0 && result.data.node != null){
                    var node = result.data.node;
                    $("input[name='node.id']").val(node.id);
                    $("input[name='node.name']").val(node.name);
                    $("select[name='node.type']").val(node.type);
                    $("input[name='node.server']").val(node.server);
                    $("input[name='node.method']").val(node.method);
                    $("textarea[name='node.info']").val(node.info);
                    $("input[name='node.status']").val(node.status);
                    $("input[name='node.order']").val(node.order);
                    $("select[name='node.custom_method']").val(node.custom_method);
                    $('#modal-6 .modal-title').html('Modify Node');
                    reset(true);
                } else {
                    $('#modal-6').modal('hide');
                }
            },
            error: function(Xhr){
                showToastr("An unknown error occurred, please try again", 0);
            }
        });
        $('#modal-6').modal('show', {backdrop: 'static'});
    }
    function changeTable(data) {
        var tid = $("tr#node-" + data.id).html();
        if(data.type == '0') {data.type = 'Ordinary nodes';} else {data.type = 'Pro nodes';}
        if(data.custom_method == '0') {data.custom_method = 'not support';} else {data.custom_method = 'stand by';}
        if(tid == undefined || tid == null) {
            /* New */
            var trCount = $("table tbody").children("tr").length;
            var newData = '<tr id="node-"'+data.id+'>';
            newData += "<td>#" + data.id + "</td>";
            newData += "<td>"  + data.name + "</td>";
            newData += "<td>" + data.method + "</td>";
            newData += "<td>" + data.info + "</td>";
            newData += "<td>" + data.type + "</td>";
            newData += "<td>" + data.custom_method + "</td>";
            newData += "<td>" + '<a class="btn btn-info btn-sm" href="javascript:;" onclick="nodeModify('+data.id+');">edit</a>' + '<a class="btn btn-danger btn-sm" href="javascript:;" onclick="nodeRemove('+data.id+');">delete</a>' + "</td></tr>";
            $("table tbody").append(newData);
            if($("#node-0").html() != undefined) $("#node-0").remove();
        } else {
            /* modify */
            var newData = "<td>#" + data.id + "</td>";
            newData += "<td>"  + data.name + "</td>";
            newData += "<td>" + data.method + "</td>";
            newData += "<td>" + data.info + "</td>";
            newData += "<td>" + data.type + "</td>";
            newData += "<td>" + data.custom_method + "</td>";
            newData += "<td>" + '<a class="btn btn-info btn-sm" href="javascript:;" onclick="nodeModify('+data.id+');">edit</a>' + '<a class="btn btn-danger btn-sm" href="javascript:;" onclick="nodeRemove('+data.id+');">delete</a>' + "</td>";
            $("tr#node-" + data.id).html(newData);
        }
    }
</script>
<import template="/admin/_footer" />
